data:
-----

KeyManager
InputsListener
EventsProcessor

sf::Event
sf::Keyboard
e_key
e_input

sf::Keyboard <> e_key -> not relevants here
e_key <> e_input


threads:
--------

main:
- launches events reader and events processor threads

InputsListener:
- listen to user events
- populates the events fifo

EventsProcessor:
- consume events from the events fifo


Note:
  The InputsListener could launch the EventsProcessor thread.
  So that, the InputsListener
     - Owns the KeyManager instance
     - Can kill the EventsProcessor thread on exit event detection
     - Only one input handler thread from the main thread point of view


  Replay handling:
  Write replay file when pushing events into the fifo (KeyManager)
  Read replay events in the pop (KeyManager)

________________________________________________________________________________
current classes:
----------------
(based on version fc26d38412a01b827f9422204875ca2f4d66c7b3)

InputProcessor:
- polls the events
- calls the EventManager to treat the events

EventManager:
- binds events to callbacks
- executes the callback

KeyManager:
- binds keys to events

States (StateMovingUnit, StateMenu, ...)
- has an EventManager
- binds events to callbacks (using its EventManager)


expected changes:
-----------------

split the InputProcessor

InputsListener:
- polls events
- populates an events fifo

EventsProcessor:
- consumes events from the fifo
- calls the EventManager to treat the events


EventManager: unchanged
KeyManager:   unchanged
States:       unchanged




________________________________________________________________________________



main
 |
 |\
 | \___________________
 |  \                  |
 | InputsListener  EventsProcessor
 |        |            |
 |        | -> fifo -> |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |        |            |
 |  ______|            |
 | /___________________|
 |/
 |
 |
exit
