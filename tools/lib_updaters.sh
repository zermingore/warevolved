#/bin/sh

get_last_version_from_repo()
{
  repo_url=$1
  pattern=$2
  local_version=$3

  # Get the last remote version
  online_last_version=$(git ls-remote --tags "$repo_url" \
                          | egrep -o "$pattern" \
                          | sort -V \
                          | tail -n 1)
  if [ $? -ne 0 -o -z $online_last_version ]; then
    echo "Cannot retrieve online version. Aborting..."
    return 1 # error
  fi

  # Stop here if the version is already actual
  if [ "$local_version" = "$online_last_version" ]; then
    echo "Already using the last version $online_last_version"
    return 0 # ok but don't continue
  fi

  LAST_VERSION="$online_last_version"
  return 3 # ok, continue
}



backup()
{
  # Backup the current version
  mv ${LOCAL_PATH} ${LOCAL_PATH}_old
  if [ $? -ne 0 ]; then
    echo "Cannot move ${LOCAL_PATH} to ${LOCAL_PATH}_old"
    exit 1
  fi
  mkdir -p ${LOCAL_PATH}
}



# __________________________________ Doctest _________________________________ #
LOCAL_PATH=tests/unit/lib
major=$(grep -m 1 '^#define DOCTEST_VERSION_MAJOR ' ${LOCAL_PATH}/doctest.h | grep -o '[0-9]*')
minor=$(grep -m 1 '^#define DOCTEST_VERSION_MINOR ' ${LOCAL_PATH}/doctest.h | grep -o '[0-9]*')
patch=$(grep -m 1 '^#define DOCTEST_VERSION_PATCH ' ${LOCAL_PATH}/doctest.h | grep -o '[0-9]*')

LOCAL_VERSION="v${major}.${minor}.${patch}"

get_last_version_from_repo https://github.com/doctest/doctest.git 'v?[0-9]+(\.[0-9]*)*' $LOCAL_VERSION
ret_code=$?
if [ $ret_code -ne 3 ]; then
  exit $ret_code
fi

# Checkout the current version to update the local one
TMP=/tmp/doctest_$(date +%s)
# Git is actually verbose anyway with --branch (on stderr)
git clone -q --branch "$LAST_VERSION" --depth 1 "$REPO_URL" $TMP
if [ $? -ne 0 ]; then
  echo "Cannot clone v${ONLINE_VERSION}. Aborting..."
  exit 1
fi

backup

cp ${TMP}/doctest/doctest.h ${LOCAL_PATH}/
cp ${TMP}/README.md ${LOCAL_PATH}/
cp ${TMP}/LICENSE.txt ${LOCAL_PATH}/

cmp $LOCAL_PATH/LICENSE* ${LOCAL_PATH}_old/LICENSE*
if [ $? -ne 0 ]; then
  echo
  echo "*Warning* LICENSE modification:"
fi
diff ${LOCAL_PATH}/LICENSE* ${LOCAL_PATH}_old/LICENSE*

# Update the version in the VERSION file
echo "$ONLINE_VERSION (generated by $0)" > ${LOCAL_PATH}/VERSION
