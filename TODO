-*- mode:org -*-
#+OPTIONS: ^:nil
#+STARTUP: content

# NOTE:
# - A task can be removed only on the master
# - A task can be added or marked as done on any branch


* TODO Roadmap
** TODO Random generator as a service locator
** DONE Testing: Launcher script
   CLOSED: [2018-11-18 So 12:24]
** DONE Testing: Smoke tests draft
   CLOSED: [2018-11-18 So 17:35]
** TODO Testing: Integration tests draft
** DONE Find a way to quit the game without closing the window
   CLOSED: [2018-11-18 So 18:56]
   Just add a key; Support it only when a specific option is provided?
** TODO Be sure to save the events_log before "closing" the game
** DONE Handle vehicles
   CLOSED: [2019-09-26 Thu 07:02]
*** DONE Pick Up / get in
    CLOSED: [2019-09-05 Thu 19:13]
*** DONE Drop / get out
    CLOSED: [2019-09-26 Thu 07:02]


* TODO Bugs / Features
** TODO Misc
*** TODO Cancel on map status -> segfault
    Quitting is a feature; the segfault is due to the event magager
*** TODO Quitting the game (Win+Shift+q under i3) closes the window, not the game (which still waits for events)
** TODO Units
*** TODO After moving a unit, only cancel is available (escape not binded)
*** TODO Do not imply move after opening the crew menu
*** TODO segfault while quitting the game, moving a unit
    This happen because every static classes get 'destructed', exiting the main
    Example: Status keeps a shared_ptr to a Battle and one to a StateMovingUnit.
      The destructor of StateMovingUnit relies on the validity of the shared_ptr on Battle
    To solve this, one can for instance:
    - Find a way to 'destruct' static classes in a defined order
    - As the static classes may be removed one day this would solve the issue
*** TODO In crew menu, 'Confirm' should be available only on changes
*** TODO Random map: every player should have at least one unit
*** TODO Sometimes, moving over an enemy unit is possible
    Seems to appear when two keys are pressed at the same time
    Unable to wait on an occupied cell though
*** TODO Crew 'Passenger' not used
*** TODO Canceling in the crew menu after a (temporary) move does not work
*** TODO Crew 'Drop Off' > 'Cancel' and 'Get Out' have the same behaviour
    Picking 'Cancel' and trying to exit ('escape') leads to a segfault
** TODO Graphics
*** TODO Resize the window: center the map
*** TODO Resize the window: propagate new panel positions
*** TODO The cursor appears over the menus
*** TODO Panel: Pilot and Co-Pilot fonts differ
*** TODO Panel: Info font (next to the unit sprite) is too big
** DONE Resizable window
   CLOSED: [2019-09-30 Mon 07:33]
   Start the game in a small window; put the window in full screen
   -> The resolution is broken
** TODO Loading a map and 'next turn' should properly initalize every non-current player units 'played' flag
** TODO Invoking the Panel seems to 'draw' a Terrain Sprite between the Panel and the Map
** TODO [Panel] Remove the Unit Sprite double draw in order to make sure the Unit sprite is displayed
** DONE The PathFinding should not, as default, clear the cells highlight attributes
   CLOSED: [2019-09-30 Mon 07:33]


* TODO Doc
** TODO Options


* TODO Clean
** TODO Pointer parameters (should pass smart_ptr only when sharing the ownership)
** TODO Avoid casts to graphic types, overriding some methods
** TODO Map iterator to access cells without explicit double loop
   (Used in PathFinding GraphicsEngine Map MiniMap at least)
** TODO Merge Cell highlight boolean and color (color::None)


* TODO Experimental
** TODO drawInterface Vs drawState
   drawState draws the interface ?
** TODO Cursor (interface) in its thread
** TODO Handle external libs (pugixml) in submodules ?
** TODO Player_id: use an enum (CURRENT, IA1, PLAYER1, PLAYER2, ...)


* TODO Input
** TODO Use the mouse to move the cursor, browse menus...
** TODO Clear the events fifo on State changes
** TODO Merge InputsListener EventsProcessor and KeyManager in a common static class ?


* TODO Game Features
** TODO Load the last save (with an option flag?)
   How to know where it's located


* TODO Code Design
** TODO use emplace[_back] with std::vector (C++11)
   (instead of create and push)
** TODO auto-generate Resources XML file
*** TODO OS-dependant in script language
**** TODO Shell Script
**** TODO [#C] .bat
*** TODO non-OS dependant (in C++)
** TODO follow the C++ rule of 0
** TODO Avoid vector of vector
   (std::vector<std::vector<Cell>> for the Map)
** TODO think about cleaning some types names
   (std::shared_ptr<std::vector<std::shared_ptr<Type>>> -> typedef)
   could use using std::vector
   could use typedef std::shared_ptr SP
** TODO Random generator as a service locator


* TODO Graphics
** TODO Implement cell scrolling (too many cells to fit on the screen)
** TODO Apply a background to the main window
** TODO Multiple graphics::Image share the same sprite
   -> require to re-set the sprite position, rotation, ... before drawing
   (is it an issue)


* TODO Resources
** TODO Sprites
*** TODO Interface
**** TODO Side panel
***** TODO Frontground (plastic cover like)
***** TODO [#B] New background matching the frontground
*** TODO Units
**** TODO Soldiers team
**** TODO Jeep
*** TODO Terrain
**** TODO Mountain
*** TODO Buildings
**** TODO Block


* TODO Gameplay
** TODO Meteo
*** TODO Graphics: add a snowy transparent sprite
** TODO Fog of War
*** TODO Vision
*** TODO Field of View ?
	Sniper: very good vision, poor field of view (angle)
*** TODO field of hearing
	know there's a unit nearby
	avoid embushes
** TODO more than one unit per cell (helicopter / soldier)
   could use more than one plan (one for ground units, one for air units)
*** TODO Tunnels
   could use different levels of zoom (micro-ing a soldier, macro-ing a tank)
** TODO dual windows (main window / infos panel)
** TODO Customize gear
   (riffles, kevlar, silencer, vehicles options)
** TODO ammo management
   by clip || bullet per bullet
** TODO Genie
   building Heliport, wounded evac
   repair center
   bury mines
   dig
   build bridges
** TODO units ranks / promotion / leader
** TODO Motion
*** TODO Move Management
   for each cell: simply move, shoot somewhere or sprint
   could micro a 5 soldier team:
     (5 cells max motion)
     2 fires at cell #2 to the north, 3 fires at cell #3 to the south
	 team regroup at #cell 4 (open fire costs 1 move)
*** TODO Open Fire Management
	while moving
	Shift on a cell: sprint (increase move costs, reduces damages taken)
	  [manage wounded whiles sprinting ?]
	Control on a cell: open fire in mouse direction
	  8 surrounding cells (less damages, even less for not 4 'direct' cells)
	  ground unit: manage how many bullets per shot ?
	  allow spamming ?
	  vehicles: rotating turret required
	    (else: fire more or less only straight shots)
		(while moving ?)
	Alt on a cell: unit rotation
	  increase reactivity
	  only on simple move
** TODO Multi-Cells units?



* TODO Sound
** TODO 3D sound (using OpenAL)


* TODO Interface
** TODO Highlight possible targets when hovering a unit
** TODO Menu Bar
** TODO Configuration file
** TODO select between satellite or schematic view
** TODO unit selection -> 'flashing lights'
** TODO center text in in-game menu entries
** TODO Display last killed unit list


* TODO Network
** TODO Chat
** TODO multi-players


* TODO [#C] Multi-Platforms
** TODO [#C] Windows
** TODO [#B] Unix (BSD)
** TODO [#C] Mac OS
** TODO [#B] Phone ?
*** TODO [#B] Android


* TODO Graphics Engine
** TODO Units filter sprite
** TODO Units orientation
   only graphic attribute ?
   use while moving a unit (default: look ahead, can check a side)
** TODO Libraries
*** TODO [#C] switch 'on demand' (at compilation time)
    use SFML if available, else SDL, pure OpenGL, ASCII, DirectX, ...
** TODO Sprites management
   merge on common themes
   1 theme -> 1 load, 1 free


* TODO Menu
** TODO Main menu


* TODO Tools
** TODO Global log
*** TODO Merge every log entries, by timestamps
*** TODO html / xml output
*** TODO css / xmlss
** TODO Commit checker
*** TODO memory leaks checker before commit
*** TODO auto-compile / launch for all build rules
*** TODO auto generate documentation
*** DONE tests were runned
    CLOSED: [2019-10-02 Wed 08:27]
** TODO auto resources XML generator
** TODO Options parser
*** TODO Options structure to initialize the Game
*** TODO Framerate (blocked to 60 in release; unlimited in debug)
** TODO The displayed fps should be computed only over a fixed period of time


* TODO Testing
** DONE Smoke tests
   CLOSED: [2019-10-01 Tue 17:19]
*** DONE Build
    CLOSED: [2019-09-30 Mon 07:35]
    autoreconf && configure && make
*** DONE Print the help
    CLOSED: [2018-11-18 So 17:43]
*** DONE Launch the game, must not crash
    CLOSED: [2019-10-01 Tue 17:19]
** DONE Non-regression tests process
   CLOSED: [2019-10-01 Tue 16:55]
   Idealy, before each bug to fix
** TODO Integration Test process
*** TODO Load a map, a replay, save at the end; compare with a reference map
*** TODO Game scripts (need to be able to use pre-recorded input)
*** [DROPPED] Use an ascii map to check fight behavior
   (use directly the xml Map instead)
*** TODO Use screenshots for the interface
   ex: SELECTION key was pressed -> save the video buffer, a menu must be open
   Use OpenCV to get the distance between the images
** TODO Unit tests
   using google tests?
** DONE Use git hooks in order to make sure the tests were considered
   CLOSED: [2019-09-30 Mon 07:35]
** [DROPPED] Disable the graphics engine (speeding up testing)
   May be considered later, if the process is indeed too slow because of it
   (The build process still takes more than a minute)
** TODO Memory Leaks / Errors: periodic controls


* TODO Build
** TODO C++20 && map.contains


* TODO [#C] Optimization
  -> *Profile* <-
** TODO improve InGameMenu stack usage
   Do *NOT* rebuild all entries each frame...
** TODO Sprites
   Every cell doesn't need to have it's own highlight sprite
   -> common sprites (1 per situation [move, attack])
** TODO Panel Cache
   The Panel is re-built at every frame
