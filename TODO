-*- mode:org -*-
#+OPTIONS: ^:nil
#+STARTUP: content

# NOTE:
# - A task can be removed only on the master
# - A task can be added or marked as done on any branch
# - (Very) long term features are documented in the doc/think/concept file



** TODO Misc
*** TODO Loading a map and 'next turn' should properly initalize every non-current player units 'played' flag
*** TODO Invoking the Panel seems to 'draw' a Terrain Sprite between the Panel and the Map
*** TODO [Panel] Remove the Unit Sprite double draw in order to make sure the Unit sprite is displayed


* TODO Doc
** TODO Options
** TODO Document the coding style


* TODO Clean
** TODO Pointer parameters (should pass smart_ptr only when sharing the ownership)
** TODO Avoid casts to graphic types, overriding some methods
** TODO Merge Cell highlight boolean and color (color::None)
** TODO Find a way to have compile-time map keys (vehicle crews)
** TODO Check included headers used
** TODO Panel clean (code && graphics: make text width panel size dependent)


* TODO Experimental
** TODO drawInterface Vs drawState
   drawState draws the interface ?
** TODO Cursor (interface) in its thread
** TODO Player_id: use an enum (CURRENT, IA1, PLAYER1, PLAYER2, ...)


* TODO Input
** TODO Clear the events fifo on State changes

* TODO Game Features
** TODO Load the last save (with an option flag?)
   How to know where it's located


* TODO Code Design
** TODO auto-generate Resources XML file
** TODO Avoid vector of vector
   (std::vector<std::vector<Cell>> for the Map)
** TODO think about cleaning some types names
   (std::shared_ptr<std::vector<std::shared_ptr<Type>>> -> typedef)
   could use using std::vector
   could use typedef std::shared_ptr SP
** TODO Random generator as a service locator


* TODO Graphics
** TODO Implement cell scrolling (too many cells to fit on the screen)
** TODO Apply a background to the main window
** TODO Multiple graphics::Image share the same sprite
   -> require to re-set the sprite position, rotation, ... before drawing
   (is it an issue)


* TODO Resources
** TODO Sprites
*** TODO Interface
**** TODO Side panel
***** TODO Frontground (plastic cover like)
***** TODO [#B] New background matching the frontground
*** TODO Units
**** TODO Soldiers team
**** TODO Jeep
*** TODO Terrain
**** TODO Mountain
*** TODO Buildings
**** TODO Block


* TODO Gameplay
** TODO Meteo
*** TODO Graphics: add a snowy transparent sprite
** TODO Multi-Cells units?


* TODO Sound
** TODO 3D sound (using OpenAL)


* TODO Interface
** TODO Highlight possible targets when hovering a unit
** TODO Menu Bar
** TODO Configuration file
** TODO unit selection -> 'flashing lights'
** TODO center text in in-game menu entries
** TODO Display last killed unit list



* TODO Graphics Engine
** TODO Units filter sprite
** TODO Units orientation
   only graphic attribute ?
   use while moving a unit (default: look ahead, can check a side)
** TODO Sprites management
   merge on common themes
   1 theme -> 1 load, 1 free


* TODO Menu
** TODO Main menu


* TODO Tools
** TODO Commit checker
*** TODO memory leaks checker before commit
*** TODO auto-compile / launch for all build rules
** TODO auto resources XML generator
** TODO Options parser
*** TODO Options structure to initialize the Game
*** TODO Framerate (blocked to 60 in release; unlimited in debug)
** TODO The displayed fps should be computed only over a fixed period of time
** TODO Check if the generated enums_printer need an update on commit/push


* TODO Testing
** TODO Integration Test process
*** TODO Use screenshots for the interface
   ex: SELECTION key was pressed -> save the video buffer, a menu must be open
   Use OpenCV to get the distance between the images
** TODO Unit tests
   using google tests?
   really brings something?
** TODO [#B] Disable the graphics engine (speeding up testing)
   May be considered later, if the process is indeed too slow because of it
   (The build process still takes more than a minute)
** TODO Memory Leaks / Errors: periodic controls



* TODO [#C] Optimization
  -> *Profile* <-
** TODO improve InGameMenu stack usage
   Do *NOT* rebuild all entries each frame...
** TODO Sprites
   Every cell doesn't need to have it's own highlight sprite
   -> common sprites (1 per situation [move, attack])
** TODO Panel Cache
   The Panel is re-built at every frame
